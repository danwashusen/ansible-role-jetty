---
- shell: ls -la {{ jetty_dst_dir }}/current
  register: jetty_current
  ignore_errors: yes
  tags: jetty

- set_fact: 
    jetty_required: false
  tags: jetty

- set_fact: 
    jetty_required: true
  when: jetty_current.stdout.find("jetty-distribution-{{ jetty_version }}") == -1
  tags: jetty

- name: Create group
  group:
    name={{ jetty_group_name }}
    state=present
    system=yes
  when: jetty_group_create
  tags: jetty

- name: Create user
  user:
    name={{ jetty_user_login }}
    state=present
    comment='Jetty Web Server'
    createhome=yes
    group={{ jetty_group_name }}
    groups={{ jetty_groups_name }}
    home={{ jetty_user_homedir }}
    shell=/usr/sbin/nologin
    system=yes
  when: jetty_user_create
  tags: jetty

- name: Download distribution tarball
  get_url:
    url="{{ jetty_tarball_base }}/jetty-distribution-{{ jetty_version }}.tar.gz"
    dest={{ jetty_src_dir }}
  when: jetty_required
  tags: jetty

- name: Unpack distribution
  shell: "tar zxf {{ jetty_src_dir }}/jetty-distribution-{{ jetty_version }}.tar.gz && chown -R {{ jetty_user_login }}:{{ jetty_group_name}} jetty-distribution-{{ jetty_version }}"
  args:
    chdir: "{{ jetty_dst_dir }}"
    creates: "{{ jetty_dst_dir }}/jetty-distribution-{{ jetty_version }}"
  when: jetty_required
  tags: jetty

- name: clear out included jetty webapps
  shell: rm -rf {{ jetty_dst_dir }}/jetty-distribution-{{ jetty_version }}/webapps/* {{ jetty_dst_dir }}/jetty-distribution-{{ jetty_version }}/contexts/*
  when: jetty_required
  tags: jetty

- name: Create symbolic link to distribution
  file:
    src="{{ jetty_dst_dir }}/jetty-distribution-{{ jetty_version }}"
    dest={{ jetty_dst_dir }}/current
    state=link
    force=yes
  when: jetty_required
  tags: jetty

- name: Create symbolic link to logs
  file:
    src="{{ jetty_dst_dir }}/current/logs"
    dest=/var/log/jetty
    state=link
  tags: jetty

- name: Update the init script stop process timeout
  replace: dest="{{ jetty_dst_dir }}/current/bin/jetty.sh" regexp='TIMEOUT=(\d+)$' replace='TIMEOUT={{ jetty_stop_timeout }}' backup=yes
  tags: jetty

- name: Create default configuration file
  template:
    src=default-jetty.j2
    dest=/etc/default/jetty
    owner=root
    group=root
    mode=0644
  tags: jetty

- name: Create init script
  file:
    src="{{ jetty_dst_dir }}/current/bin/jetty.sh"
    dest=/etc/init.d/jetty
    state=link
  when: ansible_service_mgr == "service"
  tags: jetty

- name: Remove the init.d script
  file:
    path=/etc/init.d/jetty
    state=absent
  when: ansible_service_mgr == "systemd"
  tags: jetty

- name: Create systemd service file
  template:
    src=jetty.service.j2
    dest=/etc/systemd/system/jetty.service
    owner=root
    group=root
    mode=0644
  when: ansible_service_mgr == "systemd"
  tags: jetty

  


